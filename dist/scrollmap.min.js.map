{"version":3,"sources":["scrollmap.min.js"],"names":["f","exports","module","define","window"],"mappings":"UAAUA,GAAG,GAAoBC,iBAAVA,SAAoC,oBAAAC,OAAaA,OAAOD,QAAQD,SAAmBG,GAASA,mBAATA,QAAqBA,OAAYA,IAAAA,UAAUH,OAO9HC,EAAAA,oBAPsJG,OAOtJH,OAAAA,oBAAAA,OAAAA,OAAAA,oBAAAA,KAAAA,KAAAA,MAAAA,UAAAA,MAAAA,WAAAA,OAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,IAAAA,EAAAA,mBAAAA,SAAAA,QAAAA,IAAAA,GAAAA,EAAAA,OAAAA,EAAAA,GAAAA,GAAAA,GAAAA,EAAAA,OAAAA,EAAAA,GAAAA,GAAAA,IAAAA,EAAAA,IAAAA,MAAAA,uBAAAA,EAAAA,KAAAA,MAAAA,EAAAA,KAAAA,mBAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,YAAAA,EAAAA,GAAAA,GAAAA,KAAAA,EAAAA,QAAAA,SAAAA,GAAAA,IAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAAAA,OAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,QAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,GAAAA,QAAAA,IAAAA,IAAAA,EAAAA,mBAAAA,SAAAA,QAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,s4IAAAA","file":"scrollmap.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Scrollmap = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar config = {\n    mapboxAccessToken: 'pk.eyJ1IjoiYW9zaWthIiwiYSI6IjQzRGIxeEkifQ.7OvmyBbXwwt9Qxjlh9Qd3w'\n};\n\nexports.default = config;\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar _config = require('../config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// the semi-colon before the function invocation is a safety\n// net against concatenated scripts and/or other plugins\n// that are not closed properly.\n// the anonymous function protects the `$` alias from name collisions\n; /**\r\n   * Scrollmap.js\r\n   * @author Ozy Wu-Li - @ousikaa\r\n   * @description Scrolling map\r\n   */\n\n// https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\n\n(function ($, window, document, undefined) {\n    /**\r\n     * Plugin name\r\n     */\n    var pluginName = 'Scrollmap';\n\n    /**\r\n     * Default Options\r\n     */\n    var defaultOptions = {\n        data: null,\n        mapboxConfig: {\n            container: 'scrollmap',\n            style: 'mapbox://styles/aosika/cj8tmsx9cdk3m2rqmxbq8gr1b',\n            center: [0, 0],\n            zoom: 1\n        }\n\n        /**\r\n         * Scrollmap constructor\r\n         */\n    };var Scrollmap = function Scrollmap(userOptions) {\n        // Combine/merge default and user options\n        this.options = $.extend(true, defaultOptions, userOptions);\n        // Init\n        this.init();\n        /**\r\n         * Controller\r\n         */\n        this.controller = {\n            afterMapInstantiation: function afterMapInstantiation(map) {\n                this.loaded(map);\n            }\n        };\n    };\n\n    /**\r\n     * \r\n     */\n    Scrollmap.prototype = {\n        /**\r\n         * Init\r\n         */\n        init: function init() {\n            this.instantiateMap();\n        },\n\n\n        /**\r\n         * Instantiate the map\r\n         */\n        instantiateMap: function instantiateMap() {\n            var _this = this;\n\n            // Map instance\n            var map = void 0;\n            // Mapbox access token\n            mapboxgl.accessToken = _config2.default.mapboxAccessToken;\n            // Instantiate mapbox\n            map = new mapboxgl.Map(this.options.mapboxConfig);\n\n            // Map load promise\n            new Promise(function (resolve, reject) {\n                map.on('load', _this.mapLoad.bind(_this, resolve));\n            }).then(this.afterMapLoad.bind(this, map));\n        },\n\n\n        /**\r\n         * When map is loaded\r\n         */\n        mapLoad: function mapLoad(resolve) {\n            resolve();\n        },\n\n\n        /**\r\n         * After map is loaded\r\n         */\n        afterMapLoad: function afterMapLoad(map) {\n            this.controller.afterMapInstantiation(map);\n        }\n    };\n\n    /*------------------------------------*\\\r\n      Export \r\n    \\*------------------------------------*/\n    module.exports = Scrollmap;\n})(jQuery, window, document);\n\n},{\"../config\":1}]},{},[2])(2)\n});"]}